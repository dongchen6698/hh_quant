{
    "KMID": "(close-open)/open",
    "KLEN": "(high-low)/open",
    "KMID2": "(close-open)/(high-low+1e-12)",
    "KUP": "(high-max(open,close))/open",
    "KUP2": "(high-max(open,close))/(high-low+1e-12)",
    "KLOW": "(min(open,close)-low)/open",
    "KLOW2": "(min(open,close)-low)/(high-low+1e-12)",
    "KSFT": "(2*close-high-low)/open",
    "KSFT2": "(2*close-high-low)/(high-low+1e-12)",
    "OPEN0": "open/close",
    "OPEN1": "shift(open,1)/close",
    "OPEN2": "shift(open,2)/close",
    "OPEN3": "shift(open,3)/close",
    "OPEN4": "shift(open,4)/close",
    "HIGH0": "high/close",
    "HIGH1": "shift(high,1)/close",
    "HIGH2": "shift(high,2)/close",
    "HIGH3": "shift(high,3)/close",
    "HIGH4": "shift(high,4)/close",
    "LOW0": "low/close",
    "LOW1": "shift(low,1)/close",
    "LOW2": "shift(low,2)/close",
    "LOW3": "shift(low,3)/close",
    "LOW4": "shift(low,4)/close",
    "CLOSE0": "close/close",
    "CLOSE1": "shift(close,1)/close",
    "CLOSE2": "shift(close,2)/close",
    "CLOSE3": "shift(close,3)/close",
    "CLOSE4": "shift(close,4)/close",
    "VOLUME0": "volume/(volume+1e-12)",
    "VOLUME1": "shift(volume,1)/(volume+1e-12)",
    "VOLUME2": "shift(volume,2)/(volume+1e-12)",
    "VOLUME3": "shift(volume,3)/(volume+1e-12)",
    "VOLUME4": "shift(volume,4)/(volume+1e-12)",
    "ROC5": "shift(close,5)/close",
    "ROC10": "shift(close,10)/close",
    "ROC20": "shift(close,20)/close",
    "ROC30": "shift(close,30)/close",
    "ROC60": "shift(close,60)/close",
    "MAX5": "max(high,5)/close",
    "MAX10": "max(high,10)/close",
    "MAX20": "max(high,20)/close",
    "MAX30": "max(high,30)/close",
    "MAX60": "max(high,60)/close",
    "MIN5": "min(low,5)/close",
    "MIN10": "min(low,10)/close",
    "MIN20": "min(low,20)/close",
    "MIN30": "min(low,30)/close",
    "MIN60": "min(low,60)/close",
    "MA5": "mean(close,5)/close",
    "MA10": "mean(close,10)/close",
    "MA20": "mean(close,20)/close",
    "MA30": "mean(close,30)/close",
    "MA60": "mean(close,60)/close",
    "STD5": "std(close,5)/close",
    "STD10": "std(close,10)/close",
    "STD20": "std(close,20)/close",
    "STD30": "std(close,30)/close",
    "STD60": "std(close,60)/close",
    "BETA5": "slope(close,5)/close",
    "BETA10": "slope(close,10)/close",
    "BETA20": "slope(close,20)/close",
    "BETA30": "slope(close,30)/close",
    "BETA60": "slope(close,60)/close",
    "RSQR5": "rsquare(close,5)",
    "RSQR10": "rsquare(close,10)",
    "RSQR20": "rsquare(close,20)",
    "RSQR30": "rsquare(close,30)",
    "RSQR60": "rsquare(close,60)",
    "RESI5": "resi(close,5)/close",
    "RESI10": "resi(close,10)/close",
    "RESI20": "resi(close,20)/close",
    "RESI30": "resi(close,30)/close",
    "RESI60": "resi(close,60)/close",
    "QTLU5": "quantile(close,5,0.8)/close",
    "QTLU10": "quantile(close,10,0.8)/close",
    "QTLU20": "quantile(close,20,0.8)/close",
    "QTLU30": "quantile(close,30,0.8)/close",
    "QTLU60": "quantile(close,60,0.8)/close",
    "QTLD5": "quantile(close,5,0.2)/close",
    "QTLD10": "quantile(close,10,0.2)/close",
    "QTLD20": "quantile(close,20,0.2)/close",
    "QTLD30": "quantile(close,30,0.2)/close",
    "QTLD60": "quantile(close,60,0.2)/close",
    "TSRANK5": "tsrank(close,5)",
    "TSRANK10": "tsrank(close,10)",
    "TSRANK20": "tsrank(close,20)",
    "TSRANK30": "tsrank(close,30)",
    "TSRANK60": "tsrank(close,60)",
    "RSV5": "(close-min(low,5))/(max(high,5)-min(low,5)+1e-12)",
    "RSV10": "(close-min(low,10))/(max(high,10)-min(low,10)+1e-12)",
    "RSV20": "(close-min(low,20))/(max(high,20)-min(low,20)+1e-12)",
    "RSV30": "(close-min(low,30))/(max(high,30)-min(low,30)+1e-12)",
    "RSV60": "(close-min(low,60))/(max(high,60)-min(low,60)+1e-12)",
    "IMAX5": "idxmax(high,5)/5",
    "IMAX10": "idxmax(high,10)/10",
    "IMAX20": "idxmax(high,20)/20",
    "IMAX30": "idxmax(high,30)/30",
    "IMAX60": "idxmax(high,60)/60",
    "IMIN5": "idxmin(low,5)/5",
    "IMIN10": "idxmin(low,10)/10",
    "IMIN20": "idxmin(low,20)/20",
    "IMIN30": "idxmin(low,30)/30",
    "IMIN60": "idxmin(low,60)/60",
    "IMXD5": "(idxmax(high,5)-idxmin(low,5))/5",
    "IMXD10": "(idxmax(high,10)-idxmin(low,10))/10",
    "IMXD20": "(idxmax(high,20)-idxmin(low,20))/20",
    "IMXD30": "(idxmax(high,30)-idxmin(low,30))/30",
    "IMXD60": "(idxmax(high,60)-idxmin(low,60))/60",
    "CORR5": "corr(close,log(volume+1),5)",
    "CORR10": "corr(close,log(volume+1),10)",
    "CORR20": "corr(close,log(volume+1),20)",
    "CORR30": "corr(close,log(volume+1),30)",
    "CORR60": "corr(close,log(volume+1),60)",
    "CORD5": "corr(close/shift(close,1), log(volume/shift(volume,1)+1), 5)",
    "CORD10": "corr(close/shift(close,1), log(volume/shift(volume,1)+1), 10)",
    "CORD20": "corr(close/shift(close,1), log(volume/shift(volume,1)+1), 20)",
    "CORD30": "corr(close/shift(close,1), log(volume/shift(volume,1)+1), 30)",
    "CORD60": "corr(close/shift(close,1), log(volume/shift(volume,1)+1), 60)",
    "CNTP5": "mean(close>shift(close,1), 5)",
    "CNTP10": "mean(close>shift(close,1), 10)",
    "CNTP20": "mean(close>shift(close,1), 20)",
    "CNTP30": "mean(close>shift(close,1), 30)",
    "CNTP60": "mean(close>shift(close,1), 60)",
    "CNTN5": "mean(close<shift(close,1), 5)",
    "CNTN10": "mean(close<shift(close,1), 10)",
    "CNTN20": "mean(close<shift(close,1), 20)",
    "CNTN30": "mean(close<shift(close,1), 30)",
    "CNTN60": "mean(close<shift(close,1), 60)",
    "CNTD5": "mean(close>shift(close,1), 5)-mean(close<shift(close,1), 5)",
    "CNTD10": "mean(close>shift(close,1), 10)-mean(close<shift(close,1), 10)",
    "CNTD20": "mean(close>shift(close,1), 20)-mean(close<shift(close,1), 20)",
    "CNTD30": "mean(close>shift(close,1), 30)-mean(close<shift(close,1), 30)",
    "CNTD60": "mean(close>shift(close,1), 60)-mean(close<shift(close,1), 60)",
    "SUMP5": "sum(max(close-shift(close,1),0),5)/(sum(abs(close-shift(close,1)), 5)+1e-12)",
    "SUMP10": "sum(max(close-shift(close,1),0),10)/(sum(abs(close-shift(close,1)), 10)+1e-12)",
    "SUMP20": "sum(max(close-shift(close,1),0),20)/(sum(abs(close-shift(close,1)), 20)+1e-12)",
    "SUMP30": "sum(max(close-shift(close,1),0),30)/(sum(abs(close-shift(close,1)), 30)+1e-12)",
    "SUMP60": "sum(max(close-shift(close,1),0),60)/(sum(abs(close-shift(close,1)), 60)+1e-12)",
    "SUMN5": "sum(max(shift(close,1)-close,0), 5)/(sum(abs(close-shift(close,1)), 5)+1e-12)",
    "SUMN10": "sum(max(shift(close,1)-close,0), 10)/(sum(abs(close-shift(close,1)), 10)+1e-12)",
    "SUMN20": "sum(max(shift(close,1)-close,0), 20)/(sum(abs(close-shift(close,1)), 20)+1e-12)",
    "SUMN30": "sum(max(shift(close,1)-close,0), 30)/(sum(abs(close-shift(close,1)), 30)+1e-12)",
    "SUMN60": "sum(max(shift(close,1)-close,0), 60)/(sum(abs(close-shift(close,1)), 60)+1e-12)",
    "SUMD5": "(sum(max(close-shift(close,1),0), 5)-sum(max(shift(close,1)-close,0), 5))/(sum(abs(close-shift(close,1)), 5)+1e-12)",
    "SUMD10": "(sum(max(close-shift(close,1),0), 10)-sum(max(shift(close,1)-close,0), 10))/(sum(abs(close-shift(close,1)), 10)+1e-12)",
    "SUMD20": "(sum(max(close-shift(close,1),0), 20)-sum(max(shift(close,1)-close,0), 20))/(sum(abs(close-shift(close,1)), 20)+1e-12)",
    "SUMD30": "(sum(max(close-shift(close,1),0), 30)-sum(max(shift(close,1)-close,0), 30))/(sum(abs(close-shift(close,1)), 30)+1e-12)",
    "SUMD60": "(sum(max(close-shift(close,1),0), 60)-sum(max(shift(close,1)-close,0), 60))/(sum(abs(close-shift(close,1)), 60)+1e-12)",
    "VMA5": "mean(volume,5)/(volume+1e-12)",
    "VMA10": "mean(volume,10)/(volume+1e-12)",
    "VMA20": "mean(volume,20)/(volume+1e-12)",
    "VMA30": "mean(volume,30)/(volume+1e-12)",
    "VMA60": "mean(volume,60)/(volume+1e-12)",
    "VSTD5": "std(volume,5)/(volume+1e-12)",
    "VSTD10": "std(volume,10)/(volume+1e-12)",
    "VSTD20": "std(volume,20)/(volume+1e-12)",
    "VSTD30": "std(volume,30)/(volume+1e-12)",
    "VSTD60": "std(volume,60)/(volume+1e-12)",
    "WVMA5": "std(abs(close/shift(close,1)-1)*volume,5)/(mean(abs(close/shift(close,1)-1)*volume,5)+1e-12)",
    "WVMA10": "std(abs(close/shift(close,1)-1)*volume,10)/(mean(abs(close/shift(close,1)-1)*volume,10)+1e-12)",
    "WVMA20": "std(abs(close/shift(close,1)-1)*volume,20)/(mean(abs(close/shift(close,1)-1)*volume,20)+1e-12)",
    "WVMA30": "std(abs(close/shift(close,1)-1)*volume,30)/(mean(abs(close/shift(close,1)-1)*volume,30)+1e-12)",
    "WVMA60": "std(abs(close/shift(close,1)-1)*volume,60)/(mean(abs(close/shift(close,1)-1)*volume,60)+1e-12)",
    "VSUMP5": "sum(max(volume-shift(volume,1),0), 5)/(sum(abs(volume-shift(volume,1)),5)+1e-12)",
    "VSUMP10": "sum(max(volume-shift(volume,1),0), 10)/(sum(abs(volume-shift(volume,1)),10)+1e-12)",
    "VSUMP20": "sum(max(volume-shift(volume,1),0), 20)/(sum(abs(volume-shift(volume,1)),20)+1e-12)",
    "VSUMP30": "sum(max(volume-shift(volume,1),0), 30)/(sum(abs(volume-shift(volume,1)),30)+1e-12)",
    "VSUMP60": "sum(max(volume-shift(volume,1),0), 60)/(sum(abs(volume-shift(volume,1)),60)+1e-12)",
    "VSUMN5": "sum(max(shift(volume, 1)-volume, 0), 5)/(sum(abs(volume-shift(volume,1)),5)+1e-12)",
    "VSUMN10": "sum(max(shift(volume, 1)-volume, 0), 10)/(sum(abs(volume-shift(volume,1)),10)+1e-12)",
    "VSUMN20": "sum(max(shift(volume, 1)-volume, 0), 20)/(sum(abs(volume-shift(volume,1)),20)+1e-12)",
    "VSUMN30": "sum(max(shift(volume, 1)-volume, 0), 30)/(sum(abs(volume-shift(volume,1)),30)+1e-12)",
    "VSUMN60": "sum(max(shift(volume, 1)-volume, 0), 60)/(sum(abs(volume-shift(volume,1)),60)+1e-12)",
    "VSUMD5": "(sum(max(volume-shift(volume,1),0), 5)-sum(max(shift(volume,1)-volume,0),5))/(sum(abs(volume-shift(volume,1)),5)+1e-12)",
    "VSUMD10": "(sum(max(volume-shift(volume,1),0), 10)-sum(max(shift(volume,1)-volume,0),10))/(sum(abs(volume-shift(volume,1)),10)+1e-12)",
    "VSUMD20": "(sum(max(volume-shift(volume,1),0), 20)-sum(max(shift(volume,1)-volume,0),20))/(sum(abs(volume-shift(volume,1)),20)+1e-12)",
    "VSUMD30": "(sum(max(volume-shift(volume,1),0), 30)-sum(max(shift(volume,1)-volume,0),30))/(sum(abs(volume-shift(volume,1)),30)+1e-12)",
    "VSUMD60": "(sum(max(volume-shift(volume,1),0), 60)-sum(max(shift(volume,1)-volume,0),60))/(sum(abs(volume-shift(volume,1)),60)+1e-12)"
}