{
    "alpha_101_1": "(rank(ts_argmax(signedpower(where(((close/shift(close,1)-1) < 0), std((close/shift(close,1)-1), 20), close), 2), 5)) -0.5)",
    "alpha_101_2": "(-1 * correlation(rank(delta(log(volume_0), 2)), rank(div((close - open), open)), 6))",
    "alpha_101_3": "(-1 * correlation(rank(open), rank(volume_0), 10))",
    "alpha_101_4": "(-1 * ts_rank(rank(low), 9))",
    "alpha_101_5": "(rank((open - (sum(((high+low+open+close)*0.25), 10) / 10))) * (-1 * abs(rank((close - ((high+low+open+close)*0.25))))))",
    "alpha_101_6": "(-1 * correlation(open, volume_0, 10))",
    "alpha_101_7": "where((mean(volume_0,20) < volume_0), ((-1 * ts_rank(abs(delta(close, 7)), 60)) * sign(delta(close, 7))), (-1* 1))",
    "alpha_101_8": "(-1 * rank(((sum(open, 5) * sum((close/shift(close,1)-1), 5)) - delay((sum(open, 5) * sum((close/shift(close,1)-1), 5)),10))))",
    "alpha_101_9": "where((0 < ts_min(delta(close, 1), 5)), delta(close, 1), where((ts_max(delta(close, 1), 5) < 0), delta(close, 1), (-1 * delta(close, 1))))",
    "alpha_101_10": "rank(where((0 < ts_min(delta(close, 1), 4)), delta(close, 1), where((ts_max(delta(close, 1), 4) < 0), delta(close, 1), (-1 * delta(close, 1)))))",
    "alpha_101_11": "((rank(ts_max((((high+low+open+close)*0.25) - close), 3)) + rank(ts_min((((high+low+open+close)*0.25) - close), 3))) *rank(delta(volume_0, 3)))",
    "alpha_101_12": "(sign(delta(volume_0, 1)) * (-1 * delta(close, 1)))",
    "alpha_101_13": "(-1 * rank(covariance(rank(close), rank(volume_0), 5)))",
    "alpha_101_14": "((-1 * rank(delta((close/shift(close,1)-1), 3))) * correlation(open, volume_0, 10))",
    "alpha_101_15": "(-1 * sum(rank(correlation(rank(high), rank(volume_0), 3)), 3))",
    "alpha_101_16": "(-1 * rank(covariance(rank(high), rank(volume_0), 5)))",
    "alpha_101_17": "(((-1 * rank(ts_rank(close, 10))) * rank(delta(delta(close, 1), 1))) *rank(ts_rank((div(volume_0, mean(volume_0,20))), 5)))",
    "alpha_101_18": "(-1 * rank(((std(abs((close - open)), 5) + (close - open)) + correlation(close, open,10))))",
    "alpha_101_19": "((-1 * sign(((close - delay(close, 7)) + delta(close, 7)))) * (1 + rank((1 + sum((close/shift(close,1)-1),250)))))",
    "alpha_101_20": "(((-1 * rank((open - delay(high, 1)))) * rank((open - delay(close, 1)))) * rank((open -delay(low, 1))))",
    "alpha_101_21": "where((((sum(close, 8) / 8) + std(close, 8)) < (sum(close, 2) / 2)), (-1 * 1), where(((sum(close,2) / 2) < ((sum(close, 8) / 8) - std(close, 8))), 1, where(((1 < div(volume_0, mean(volume_0,20))) | (div(volume_0, mean(volume_0,20)) == 1)), 1, (-1 * 1))))",
    "alpha_101_22": "(-1 * (delta(correlation(high, volume_0, 5), 5) * rank(std(close, 20))))",
    "alpha_101_23": "where(((sum(high, 20) / 20) < high), (-1 * delta(high, 2)), 0)",
    "alpha_101_24": "where((((delta((sum(close, 100) / 100), 100) / delay(close, 100)) < 0.05) | ((delta((sum(close, 100) / 100), 100) / delay(close, 100)) == 0.05)), (-1 * (close - ts_min(close,100))), (-1 * delta(close, 3)))",
    "alpha_101_25": "rank(((((-1 * (close/shift(close,1)-1)) * mean(volume_0,20)) * ((high+low+open+close)*0.25)) * (high - close)))",
    "alpha_101_26": "(-1 * ts_max(correlation(ts_rank(volume_0, 5), ts_rank(high, 5), 5), 3))",
    "alpha_101_27": "where((0.5 < rank((sum(correlation(rank(volume_0), rank(((high+low+open+close)*0.25)), 6), 2) / 2.0))), (-1 * 1), 1)",
    "alpha_101_28": "scale(((correlation(mean(volume_0,20), low, 5) + ((high + low) / 2)) - close))",
    "alpha_101_29": "(min(product(rank(rank(scale(log(sum(ts_min(rank(rank((-1 * rank(delta((close - 1),5))))), 2), 1))))), 1), 5) + ts_rank(delay((-1 * (close/shift(close,1)-1)), 6), 5))",
    "alpha_101_30": "div(((1.0 - rank(((sign((close - delay(close, 1))) + sign((delay(close, 1) - delay(close, 2)))) +sign((delay(close, 2) - delay(close, 3)))))) * sum(volume_0, 5)), sum(volume_0, 20))",
    "alpha_101_31": "((rank(rank(rank(decay_linear((-1 * rank(rank(delta(close, 10)))), 10)))) + rank((-1 *delta(close, 3)))) + sign(scale(correlation(mean(volume_0,20), low, 12))))",
    "alpha_101_32": "(scale(((sum(close, 7) / 7) - close)) + (20 * scale(correlation(((high+low+open+close)*0.25), delay(close, 5),230))))",
    "alpha_101_33": "rank((-1 * ((1 - (open / close))**1)))",
    "alpha_101_34": "rank(((1 - rank(div(std((close/shift(close,1)-1), 2), std((close/shift(close,1)-1), 5)))) + (1 - rank(delta(close, 1)))))",
    "alpha_101_35": "((ts_rank(volume_0, 32) * (1 - ts_rank(((close + high) - low), 16))) * (1 -ts_rank((close/shift(close,1)-1), 32)))",
    "alpha_101_36": "(((((2.21 * rank(correlation((close - open), delay(volume_0, 1), 15))) + (0.7 * rank((open- close)))) + (0.73 * rank(ts_rank(delay((-1 * (close/shift(close,1)-1)), 6), 5)))) + rank(abs(correlation(((high+low+open+close)*0.25),mean(volume_0,20), 6)))) + (0.6 * rank((((sum(close, 200) / 200) - open) * (close - open)))))",
    "alpha_101_37": "(rank(correlation(delay((open - close), 1), close, 200)) + rank((open - close)))",
    "alpha_101_38": "((-1 * rank(ts_rank(close, 10))) * rank((close / open)))",
    "alpha_101_39": "((-1 * rank((delta(close, 7) * (1 - rank(decay_linear(div(volume_0, mean(volume_0,20)), 9)))))) * (1 +rank(sum((close/shift(close,1)-1), 250))))",
    "alpha_101_40": "((-1 * rank(std(high, 10))) * correlation(high, volume_0, 10))",
    "alpha_101_41": "(((high * low)**0.5) - ((high+low+open+close)*0.25))",
    "alpha_101_42": "div(rank((((high+low+open+close)*0.25) - close)), rank((((high+low+open+close)*0.25) + close)))",
    "alpha_101_43": "(ts_rank(div(volume_0, mean(volume_0,20)), 20) * ts_rank((-1 * delta(close, 7)), 8))",
    "alpha_101_44": "(-1 * correlation(high, rank(volume_0), 5))",
    "alpha_101_45": "(-1 * ((rank((sum(delay(close, 5), 20) / 20)) * correlation(close, volume_0, 2)) *rank(correlation(sum(close, 5), sum(close, 20), 2))))",
    "alpha_101_46": "where((0.25 < (((delay(close, 20) - delay(close, 10)) / 10) - ((delay(close, 10) - close) / 10))), (-1 * 1), where(((((delay(close, 20) - delay(close, 10)) / 10) - ((delay(close, 10) - close) / 10)) < 0), 1, ((-1 * 1) * (close - delay(close, 1)))))",
    "alpha_101_47": "((div((rank((1 / close)) * volume_0), mean(volume_0,20)) * ((high * rank((high - close))) / (sum(high, 5) /5))) - rank((((high+low+open+close)*0.25) - delay(((high+low+open+close)*0.25), 5))))",
    "alpha_101_49": "where(((((delay(close, 20) - delay(close, 10)) / 10) - ((delay(close, 10) - close) / 10)) < (-1 *0.1)), 1, ((-1 * 1) * (close - delay(close, 1))))",
    "alpha_101_50": "(-1 * ts_max(rank(correlation(rank(volume_0), rank(((high+low+open+close)*0.25)), 5)), 5))",
    "alpha_101_51": "where(((((delay(close, 20) - delay(close, 10)) / 10) - ((delay(close, 10) - close) / 10)) < (-1 *0.05)), 1, ((-1 * 1) * (close - delay(close, 1))))",
    "alpha_101_52": "((((-1 * ts_min(low, 5)) + delay(ts_min(low, 5), 5)) * rank(((sum((close/shift(close,1)-1), 240) -sum((close/shift(close,1)-1), 20)) / 220))) * ts_rank(volume_0, 5))",
    "alpha_101_53": "(-1 * delta(div(((close - low) - (high - close)), (close - low)), 9))",
    "alpha_101_54": "div((-1 * ((low - close) * (open**5))), ((low - high) * (close**5)))",
    "alpha_101_55": "(-1 * correlation(rank(div((close - ts_min(low, 12)), (ts_max(high, 12) - ts_min(low,12)))), rank(volume_0), 6))",
    "alpha_101_56": "(0 - (1 * (rank(div(sum((close/shift(close,1)-1), 10), sum(sum((close/shift(close,1)-1), 2), 3))) * rank(((close/shift(close,1)-1) * market_cap_0)))))",
    "alpha_101_57": "(0 - (1 * div((close - ((high+low+open+close)*0.25)), decay_linear(rank(ts_argmax(close, 30)), 2))))",
    "alpha_101_60": "(0 - (1 * ((2 * scale(rank((div(((close - low) - (high - close)), (high - low)) * volume_0)))) -scale(rank(ts_argmax(close, 10))))))",
    "alpha_101_61": "where(rank((((high+low+open+close)*0.25) - ts_min(((high+low+open+close)*0.25), 16.1219))) < rank(correlation(((high+low+open+close)*0.25), mean(volume_0,180), 17.9282)), 1, -1)",
    "alpha_101_62": "((rank(correlation(((high+low+open+close)*0.25), sum(mean(volume_0,20), 22.4101), 9.91009)) < rank(((rank(open) +rank(open)) < (rank(((high + low) / 2)) + rank(high))))) * -1)",
    "alpha_101_64": "(where(rank(correlation(sum(((open * 0.178404) + (low * (1 - 0.178404))), 12.7054),sum(mean(volume_0,120), 12.7054), 16.6208)) < rank(delta(((((high + low) / 2) * 0.178404) + (((high+low+open+close)*0.25) * (1 -0.178404))), 3.69741)), 1, -1) * -1)",
    "alpha_101_65": "(where(rank(correlation(((open * 0.00817205) + (((high+low+open+close)*0.25) * (1 - 0.00817205))), sum(mean(volume_0,60),8.6911), 6.40374)) < rank((open - ts_min(open, 13.635))), 1, -1) * -1)",
    "alpha_101_66": "((rank(decay_linear(delta(((high+low+open+close)*0.25), 3.51013), 7.23052)) + ts_rank(decay_linear(div((((low* 0.96633) + (low * (1 - 0.96633))) - ((high+low+open+close)*0.25)), (open - ((high + low) / 2))), 11.4157), 6.72611)) * -1)",
    "alpha_101_68": "(where(ts_rank(correlation(rank(high), rank(mean(volume_0,15)), 8.91644), 13.9333) <rank(delta(((close * 0.518371) + (low * (1 - 0.518371))), 1.06157)), 1, -1) * -1)",
    "alpha_101_71": "max(ts_rank(decay_linear(correlation(ts_rank(close, 3.43976), ts_rank(mean(volume_0,180),12.0647), 18.0175), 4.20501), 15.6948), ts_rank(decay_linear((rank(((low + open) - (((high+low+open+close)*0.25) +((high+low+open+close)*0.25))))**2), 16.4662), 4.4388))",
    "alpha_101_72": "div(rank(decay_linear(correlation(((high + low) / 2), mean(volume_0,40), 8.93345), 10.1519)), rank(decay_linear(correlation(ts_rank(((high+low+open+close)*0.25), 3.72469), ts_rank(volume_0, 18.5188), 6.86671),2.95011)))",
    "alpha_101_73": "(max(rank(decay_linear(delta(((high+low+open+close)*0.25), 4.72775), 2.91864)),ts_rank(decay_linear((div(delta(((open * 0.147155) + (low * (1 - 0.147155))), 2.03608), ((open *0.147155) + (low * (1 - 0.147155)))) * -1), 3.33829), 16.7411)) * -1)",
    "alpha_101_74": "(where(rank(correlation(close, sum(mean(volume_0,30), 37.4843), 15.1365)) <rank(correlation(rank(((high * 0.0261661) + (((high+low+open+close)*0.25) * (1 - 0.0261661)))), rank(volume_0), 11.4791)), 1, -1)* -1)",
    "alpha_101_75": "where(rank(correlation(((high+low+open+close)*0.25), volume_0, 4.24304)) < rank(correlation(rank(low), rank(mean(volume_0,50)),12.4413)), 1, -1)",
    "alpha_101_77": "min(rank(decay_linear(((((high + low) / 2) + high) - (((high+low+open+close)*0.25) + high)), 20.0451)),rank(decay_linear(correlation(((high + low) / 2), mean(volume_0,40), 3.1614), 5.64125)))",
    "alpha_101_78": "(rank(correlation(sum(((low * 0.352233) + (((high+low+open+close)*0.25) * (1 - 0.352233))), 19.7428),sum(mean(volume_0,40), 19.7428), 6.83313))**rank(correlation(rank(((high+low+open+close)*0.25)), rank(volume_0), 5.77492)))",
    "alpha_101_81": "(where(rank(log(product(rank((rank(correlation(((high+low+open+close)*0.25), sum(mean(volume_0,10), 49.6054),8.47743))**4)), 14.9655))) < rank(correlation(rank(((high+low+open+close)*0.25)), rank(volume_0), 5.07914)), 1, -1) * -1)",
    "alpha_101_83": "div((rank(delay(div((high - low), (sum(close, 5) / 5)), 2)) * rank(rank(volume_0))), div(((high -low) / (sum(close, 5) / 5)), (((high+low+open+close)*0.25) - close)))",
    "alpha_101_84": "signedpower(ts_rank((((high+low+open+close)*0.25) - ts_max(((high+low+open+close)*0.25), 15.3217)), 20.7127), delta(close,4.96796))",
    "alpha_101_85": "(rank(correlation(((high * 0.876703) + (close * (1 - 0.876703))), mean(volume_0,30),9.61331))**rank(correlation(ts_rank(((high + low) / 2), 3.70596), ts_rank(volume_0, 10.1595),7.11408)))",
    "alpha_101_86": "(where(ts_rank(correlation(close, sum(mean(volume_0,20), 14.7444), 6.00049), 20.4195) < rank(((open+ close) - (((high+low+open+close)*0.25) + open))), 1, -1) * -1)",
    "alpha_101_88": "min(rank(decay_linear(((rank(open) + rank(low)) - (rank(high) + rank(close))),8.06882)), ts_rank(decay_linear(correlation(ts_rank(close, 8.44728), ts_rank(mean(volume_0,60),20.6966), 8.01266), 6.65053), 2.61957))",
    "alpha_101_92": "min(ts_rank(decay_linear(where((((high + low) / 2) + close) < (low + open), 1, -1), 14.7221),18.8683), ts_rank(decay_linear(correlation(rank(low), rank(mean(volume_0,30)), 7.58555), 6.94024),6.80584))",
    "alpha_101_94": "((rank((((high+low+open+close)*0.25) - ts_min(((high+low+open+close)*0.25), 11.5783)))**ts_rank(correlation(ts_rank(((high+low+open+close)*0.25),19.6462), ts_rank(mean(volume_0,60), 4.02992), 18.0926), 2.70756)) * -1)",
    "alpha_101_95": "where(rank((open - ts_min(open, 12.4105))) < ts_rank((rank(correlation(sum(((high + low)/ 2), 19.1351), sum(mean(volume_0,40), 19.1351), 12.8742))**5), 11.7584), 1, -1)",
    "alpha_101_96": "(max(ts_rank(decay_linear(correlation(rank(((high+low+open+close)*0.25)), rank(volume_0), 3.83878),4.16783), 8.38151), ts_rank(decay_linear(ts_argmax(correlation(ts_rank(close, 7.45404),ts_rank(mean(volume_0,60), 4.13242), 3.65459), 12.6556), 14.0365), 13.4143)) * -1)",
    "alpha_101_98": "(rank(decay_linear(correlation(((high+low+open+close)*0.25), sum(mean(volume_0,5), 26.4719), 4.58418), 7.18088)) -rank(decay_linear(ts_rank(ts_argmin(correlation(rank(open), rank(mean(volume_0,15)), 20.8187), 8.62571),6.95668), 8.07206)))",
    "alpha_101_99": "(where(rank(correlation(sum(((high + low) / 2), 19.8975), sum(mean(volume_0,60), 19.8975), 8.8136)) <rank(correlation(low, volume_0, 6.28259)), 1, -1) * -1)",
    "alpha_101_101": "div((close - open), ((high - low) + 0.001))"
}