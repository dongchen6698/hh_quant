{
    "alpha_001": "(rank(ts_argmax(signedpower(where(((close_0/shift(close_0,1)-1) < 0), std((close_0/shift(close_0,1)-1), 20), close_0), 2), 5)) -0.5)",
    "alpha_002": "(-1 * correlation(rank(delta(log(volume_0), 2)), rank(div((close_0 - open_0), open_0)), 6))",
    "alpha_003": "(-1 * correlation(rank(open_0), rank(volume_0), 10))",
    "alpha_004": "(-1 * ts_rank(rank(low_0), 9))",
    "alpha_005": "(rank((open_0 - (sum(((high_0+low_0+open_0+close_0)*0.25), 10) / 10))) * (-1 * abs(rank((close_0 - ((high_0+low_0+open_0+close_0)*0.25))))))",
    "alpha_006": "(-1 * correlation(open_0, volume_0, 10))",
    "alpha_007": "where((mean(volume_0,20) < volume_0), ((-1 * ts_rank(abs(delta(close_0, 7)), 60)) * sign(delta(close_0, 7))), (-1* 1))",
    "alpha_008": "(-1 * rank(((sum(open_0, 5) * sum((close_0/shift(close_0,1)-1), 5)) - delay((sum(open_0, 5) * sum((close_0/shift(close_0,1)-1), 5)),10))))",
    "alpha_009": "where((0 < ts_min(delta(close_0, 1), 5)), delta(close_0, 1), where((ts_max(delta(close_0, 1), 5) < 0), delta(close_0, 1), (-1 * delta(close_0, 1))))",
    "alpha_010": "rank(where((0 < ts_min(delta(close_0, 1), 4)), delta(close_0, 1), where((ts_max(delta(close_0, 1), 4) < 0), delta(close_0, 1), (-1 * delta(close_0, 1)))))",
    "alpha_011": "((rank(ts_max((((high_0+low_0+open_0+close_0)*0.25) - close_0), 3)) + rank(ts_min((((high_0+low_0+open_0+close_0)*0.25) - close_0), 3))) *rank(delta(volume_0, 3)))",
    "alpha_012": "(sign(delta(volume_0, 1)) * (-1 * delta(close_0, 1)))",
    "alpha_013": "(-1 * rank(covariance(rank(close_0), rank(volume_0), 5)))",
    "alpha_014": "((-1 * rank(delta((close_0/shift(close_0,1)-1), 3))) * correlation(open_0, volume_0, 10))",
    "alpha_015": "(-1 * sum(rank(correlation(rank(high_0), rank(volume_0), 3)), 3))",
    "alpha_016": "(-1 * rank(covariance(rank(high_0), rank(volume_0), 5)))",
    "alpha_017": "(((-1 * rank(ts_rank(close_0, 10))) * rank(delta(delta(close_0, 1), 1))) *rank(ts_rank((div(volume_0, mean(volume_0,20))), 5)))",
    "alpha_018": "(-1 * rank(((std(abs((close_0 - open_0)), 5) + (close_0 - open_0)) + correlation(close_0, open_0,10))))",
    "alpha_019": "((-1 * sign(((close_0 - delay(close_0, 7)) + delta(close_0, 7)))) * (1 + rank((1 + sum((close_0/shift(close_0,1)-1),250)))))",
    "alpha_020": "(((-1 * rank((open_0 - delay(high_0, 1)))) * rank((open_0 - delay(close_0, 1)))) * rank((open_0 -delay(low_0, 1))))",
    "alpha_021": "where((((sum(close_0, 8) / 8) + std(close_0, 8)) < (sum(close_0, 2) / 2)), (-1 * 1), where(((sum(close_0,2) / 2) < ((sum(close_0, 8) / 8) - std(close_0, 8))), 1, where(((1 < div(volume_0, mean(volume_0,20))) | (div(volume_0, mean(volume_0,20)) == 1)), 1, (-1 * 1))))",
    "alpha_022": "(-1 * (delta(correlation(high_0, volume_0, 5), 5) * rank(std(close_0, 20))))",
    "alpha_023": "where(((sum(high_0, 20) / 20) < high_0), (-1 * delta(high_0, 2)), 0)",
    "alpha_024": "where((((delta((sum(close_0, 100) / 100), 100) / delay(close_0, 100)) < 0.05) | ((delta((sum(close_0, 100) / 100), 100) / delay(close_0, 100)) == 0.05)), (-1 * (close_0 - ts_min(close_0,100))), (-1 * delta(close_0, 3)))",
    "alpha_025": "rank(((((-1 * (close_0/shift(close_0,1)-1)) * mean(volume_0,20)) * ((high_0+low_0+open_0+close_0)*0.25)) * (high_0 - close_0)))",
    "alpha_026": "(-1 * ts_max(correlation(ts_rank(volume_0, 5), ts_rank(high_0, 5), 5), 3))",
    "alpha_027": "where((0.5 < rank((sum(correlation(rank(volume_0), rank(((high_0+low_0+open_0+close_0)*0.25)), 6), 2) / 2.0))), (-1 * 1), 1)",
    "alpha_028": "scale(((correlation(mean(volume_0,20), low_0, 5) + ((high_0 + low_0) / 2)) - close_0))",
    "alpha_029": "(min(product(rank(rank(scale(log(sum(ts_min(rank(rank((-1 * rank(delta((close_0 - 1),5))))), 2), 1))))), 1), 5) + ts_rank(delay((-1 * (close_0/shift(close_0,1)-1)), 6), 5))",
    "alpha_030": "div(((1.0 - rank(((sign((close_0 - delay(close_0, 1))) + sign((delay(close_0, 1) - delay(close_0, 2)))) +sign((delay(close_0, 2) - delay(close_0, 3)))))) * sum(volume_0, 5)), sum(volume_0, 20))",
    "alpha_031": "((rank(rank(rank(decay_linear((-1 * rank(rank(delta(close_0, 10)))), 10)))) + rank((-1 *delta(close_0, 3)))) + sign(scale(correlation(mean(volume_0,20), low_0, 12))))",
    "alpha_032": "(scale(((sum(close_0, 7) / 7) - close_0)) + (20 * scale(correlation(((high_0+low_0+open_0+close_0)*0.25), delay(close_0, 5),230))))",
    "alpha_033": "rank((-1 * ((1 - (open_0 / close_0))**1)))",
    "alpha_034": "rank(((1 - rank(div(std((close_0/shift(close_0,1)-1), 2), std((close_0/shift(close_0,1)-1), 5)))) + (1 - rank(delta(close_0, 1)))))",
    "alpha_035": "((ts_rank(volume_0, 32) * (1 - ts_rank(((close_0 + high_0) - low_0), 16))) * (1 -ts_rank((close_0/shift(close_0,1)-1), 32)))",
    "alpha_036": "(((((2.21 * rank(correlation((close_0 - open_0), delay(volume_0, 1), 15))) + (0.7 * rank((open_0- close_0)))) + (0.73 * rank(ts_rank(delay((-1 * (close_0/shift(close_0,1)-1)), 6), 5)))) + rank(abs(correlation(((high_0+low_0+open_0+close_0)*0.25),mean(volume_0,20), 6)))) + (0.6 * rank((((sum(close_0, 200) / 200) - open_0) * (close_0 - open_0)))))",
    "alpha_037": "(rank(correlation(delay((open_0 - close_0), 1), close_0, 200)) + rank((open_0 - close_0)))",
    "alpha_038": "((-1 * rank(ts_rank(close_0, 10))) * rank((close_0 / open_0)))",
    "alpha_039": "((-1 * rank((delta(close_0, 7) * (1 - rank(decay_linear(div(volume_0, mean(volume_0,20)), 9)))))) * (1 +rank(sum((close_0/shift(close_0,1)-1), 250))))",
    "alpha_040": "((-1 * rank(std(high_0, 10))) * correlation(high_0, volume_0, 10))",
    "alpha_041": "(((high_0 * low_0)**0.5) - ((high_0+low_0+open_0+close_0)*0.25))",
    "alpha_042": "div(rank((((high_0+low_0+open_0+close_0)*0.25) - close_0)), rank((((high_0+low_0+open_0+close_0)*0.25) + close_0)))",
    "alpha_043": "(ts_rank(div(volume_0, mean(volume_0,20)), 20) * ts_rank((-1 * delta(close_0, 7)), 8))",
    "alpha_044": "(-1 * correlation(high_0, rank(volume_0), 5))",
    "alpha_045": "(-1 * ((rank((sum(delay(close_0, 5), 20) / 20)) * correlation(close_0, volume_0, 2)) *rank(correlation(sum(close_0, 5), sum(close_0, 20), 2))))",
    "alpha_046": "where((0.25 < (((delay(close_0, 20) - delay(close_0, 10)) / 10) - ((delay(close_0, 10) - close_0) / 10))), (-1 * 1), where(((((delay(close_0, 20) - delay(close_0, 10)) / 10) - ((delay(close_0, 10) - close_0) / 10)) < 0), 1, ((-1 * 1) * (close_0 - delay(close_0, 1)))))",
    "alpha_047": "((div((rank((1 / close_0)) * volume_0), mean(volume_0,20)) * ((high_0 * rank((high_0 - close_0))) / (sum(high_0, 5) /5))) - rank((((high_0+low_0+open_0+close_0)*0.25) - delay(((high_0+low_0+open_0+close_0)*0.25), 5))))",
    "alpha_049": "where(((((delay(close_0, 20) - delay(close_0, 10)) / 10) - ((delay(close_0, 10) - close_0) / 10)) < (-1 *0.1)), 1, ((-1 * 1) * (close_0 - delay(close_0, 1))))",
    "alpha_050": "(-1 * ts_max(rank(correlation(rank(volume_0), rank(((high_0+low_0+open_0+close_0)*0.25)), 5)), 5))",
    "alpha_051": "where(((((delay(close_0, 20) - delay(close_0, 10)) / 10) - ((delay(close_0, 10) - close_0) / 10)) < (-1 *0.05)), 1, ((-1 * 1) * (close_0 - delay(close_0, 1))))",
    "alpha_052": "((((-1 * ts_min(low_0, 5)) + delay(ts_min(low_0, 5), 5)) * rank(((sum((close_0/shift(close_0,1)-1), 240) -sum((close_0/shift(close_0,1)-1), 20)) / 220))) * ts_rank(volume_0, 5))",
    "alpha_053": "(-1 * delta(div(((close_0 - low_0) - (high_0 - close_0)), (close_0 - low_0)), 9))",
    "alpha_054": "div((-1 * ((low_0 - close_0) * (open_0**5))), ((low_0 - high_0) * (close_0**5)))",
    "alpha_055": "(-1 * correlation(rank(div((close_0 - ts_min(low_0, 12)), (ts_max(high_0, 12) - ts_min(low_0,12)))), rank(volume_0), 6))",
    "alpha_056": "(0 - (1 * (rank(div(sum((close_0/shift(close_0,1)-1), 10), sum(sum((close_0/shift(close_0,1)-1), 2), 3))) * rank(((close_0/shift(close_0,1)-1) * market_cap_0)))))",
    "alpha_057": "(0 - (1 * div((close_0 - ((high_0+low_0+open_0+close_0)*0.25)), decay_linear(rank(ts_argmax(close_0, 30)), 2))))",
    "alpha_060": "(0 - (1 * ((2 * scale(rank((div(((close_0 - low_0) - (high_0 - close_0)), (high_0 - low_0)) * volume_0)))) -scale(rank(ts_argmax(close_0, 10))))))",
    "alpha_061": "where(rank((((high_0+low_0+open_0+close_0)*0.25) - ts_min(((high_0+low_0+open_0+close_0)*0.25), 16.1219))) < rank(correlation(((high_0+low_0+open_0+close_0)*0.25), mean(volume_0,180), 17.9282)), 1, -1)",
    "alpha_062": "((rank(correlation(((high_0+low_0+open_0+close_0)*0.25), sum(mean(volume_0,20), 22.4101), 9.91009)) < rank(((rank(open_0) +rank(open_0)) < (rank(((high_0 + low_0) / 2)) + rank(high_0))))) * -1)",
    "alpha_064": "(where(rank(correlation(sum(((open_0 * 0.178404) + (low_0 * (1 - 0.178404))), 12.7054),sum(mean(volume_0,120), 12.7054), 16.6208)) < rank(delta(((((high_0 + low_0) / 2) * 0.178404) + (((high_0+low_0+open_0+close_0)*0.25) * (1 -0.178404))), 3.69741)), 1, -1) * -1)",
    "alpha_065": "(where(rank(correlation(((open_0 * 0.00817205) + (((high_0+low_0+open_0+close_0)*0.25) * (1 - 0.00817205))), sum(mean(volume_0,60),8.6911), 6.40374)) < rank((open_0 - ts_min(open_0, 13.635))), 1, -1) * -1)",
    "alpha_066": "((rank(decay_linear(delta(((high_0+low_0+open_0+close_0)*0.25), 3.51013), 7.23052)) + ts_rank(decay_linear(div((((low_0* 0.96633) + (low_0 * (1 - 0.96633))) - ((high_0+low_0+open_0+close_0)*0.25)), (open_0 - ((high_0 + low_0) / 2))), 11.4157), 6.72611)) * -1)",
    "alpha_068": "(where(ts_rank(correlation(rank(high_0), rank(mean(volume_0,15)), 8.91644), 13.9333) <rank(delta(((close_0 * 0.518371) + (low_0 * (1 - 0.518371))), 1.06157)), 1, -1) * -1)",
    "alpha_071": "max(ts_rank(decay_linear(correlation(ts_rank(close_0, 3.43976), ts_rank(mean(volume_0,180),12.0647), 18.0175), 4.20501), 15.6948), ts_rank(decay_linear((rank(((low_0 + open_0) - (((high_0+low_0+open_0+close_0)*0.25) +((high_0+low_0+open_0+close_0)*0.25))))**2), 16.4662), 4.4388))",
    "alpha_072": "div(rank(decay_linear(correlation(((high_0 + low_0) / 2), mean(volume_0,40), 8.93345), 10.1519)), rank(decay_linear(correlation(ts_rank(((high_0+low_0+open_0+close_0)*0.25), 3.72469), ts_rank(volume_0, 18.5188), 6.86671),2.95011)))",
    "alpha_073": "(max(rank(decay_linear(delta(((high_0+low_0+open_0+close_0)*0.25), 4.72775), 2.91864)),ts_rank(decay_linear((div(delta(((open_0 * 0.147155) + (low_0 * (1 - 0.147155))), 2.03608), ((open_0 *0.147155) + (low_0 * (1 - 0.147155)))) * -1), 3.33829), 16.7411)) * -1)",
    "alpha_074": "(where(rank(correlation(close_0, sum(mean(volume_0,30), 37.4843), 15.1365)) <rank(correlation(rank(((high_0 * 0.0261661) + (((high_0+low_0+open_0+close_0)*0.25) * (1 - 0.0261661)))), rank(volume_0), 11.4791)), 1, -1)* -1)",
    "alpha_075": "where(rank(correlation(((high_0+low_0+open_0+close_0)*0.25), volume_0, 4.24304)) < rank(correlation(rank(low_0), rank(mean(volume_0,50)),12.4413)), 1, -1)",
    "alpha_077": "min(rank(decay_linear(((((high_0 + low_0) / 2) + high_0) - (((high_0+low_0+open_0+close_0)*0.25) + high_0)), 20.0451)),rank(decay_linear(correlation(((high_0 + low_0) / 2), mean(volume_0,40), 3.1614), 5.64125)))",
    "alpha_078": "(rank(correlation(sum(((low_0 * 0.352233) + (((high_0+low_0+open_0+close_0)*0.25) * (1 - 0.352233))), 19.7428),sum(mean(volume_0,40), 19.7428), 6.83313))**rank(correlation(rank(((high_0+low_0+open_0+close_0)*0.25)), rank(volume_0), 5.77492)))",
    "alpha_081": "(where(rank(log(product(rank((rank(correlation(((high_0+low_0+open_0+close_0)*0.25), sum(mean(volume_0,10), 49.6054),8.47743))**4)), 14.9655))) < rank(correlation(rank(((high_0+low_0+open_0+close_0)*0.25)), rank(volume_0), 5.07914)), 1, -1) * -1)",
    "alpha_083": "div((rank(delay(div((high_0 - low_0), (sum(close_0, 5) / 5)), 2)) * rank(rank(volume_0))), div(((high_0 -low_0) / (sum(close_0, 5) / 5)), (((high_0+low_0+open_0+close_0)*0.25) - close_0)))",
    "alpha_084": "signedpower(ts_rank((((high_0+low_0+open_0+close_0)*0.25) - ts_max(((high_0+low_0+open_0+close_0)*0.25), 15.3217)), 20.7127), delta(close_0,4.96796))",
    "alpha_085": "(rank(correlation(((high_0 * 0.876703) + (close_0 * (1 - 0.876703))), mean(volume_0,30),9.61331))**rank(correlation(ts_rank(((high_0 + low_0) / 2), 3.70596), ts_rank(volume_0, 10.1595),7.11408)))",
    "alpha_086": "(where(ts_rank(correlation(close_0, sum(mean(volume_0,20), 14.7444), 6.00049), 20.4195) < rank(((open_0+ close_0) - (((high_0+low_0+open_0+close_0)*0.25) + open_0))), 1, -1) * -1)",
    "alpha_088": "min(rank(decay_linear(((rank(open_0) + rank(low_0)) - (rank(high_0) + rank(close_0))),8.06882)), ts_rank(decay_linear(correlation(ts_rank(close_0, 8.44728), ts_rank(mean(volume_0,60),20.6966), 8.01266), 6.65053), 2.61957))",
    "alpha_092": "min(ts_rank(decay_linear(where((((high_0 + low_0) / 2) + close_0) < (low_0 + open_0), 1, -1), 14.7221),18.8683), ts_rank(decay_linear(correlation(rank(low_0), rank(mean(volume_0,30)), 7.58555), 6.94024),6.80584))",
    "alpha_094": "((rank((((high_0+low_0+open_0+close_0)*0.25) - ts_min(((high_0+low_0+open_0+close_0)*0.25), 11.5783)))**ts_rank(correlation(ts_rank(((high_0+low_0+open_0+close_0)*0.25),19.6462), ts_rank(mean(volume_0,60), 4.02992), 18.0926), 2.70756)) * -1)",
    "alpha_095": "where(rank((open_0 - ts_min(open_0, 12.4105))) < ts_rank((rank(correlation(sum(((high_0 + low_0)/ 2), 19.1351), sum(mean(volume_0,40), 19.1351), 12.8742))**5), 11.7584), 1, -1)",
    "alpha_096": "(max(ts_rank(decay_linear(correlation(rank(((high_0+low_0+open_0+close_0)*0.25)), rank(volume_0), 3.83878),4.16783), 8.38151), ts_rank(decay_linear(ts_argmax(correlation(ts_rank(close_0, 7.45404),ts_rank(mean(volume_0,60), 4.13242), 3.65459), 12.6556), 14.0365), 13.4143)) * -1)",
    "alpha_098": "(rank(decay_linear(correlation(((high_0+low_0+open_0+close_0)*0.25), sum(mean(volume_0,5), 26.4719), 4.58418), 7.18088)) -rank(decay_linear(ts_rank(ts_argmin(correlation(rank(open_0), rank(mean(volume_0,15)), 20.8187), 8.62571),6.95668), 8.07206)))",
    "alpha_099": "(where(rank(correlation(sum(((high_0 + low_0) / 2), 19.8975), sum(mean(volume_0,60), 19.8975), 8.8136)) <rank(correlation(low_0, volume_0, 6.28259)), 1, -1) * -1)",
    "alpha_101": "div((close_0 - open_0), ((high_0 - low_0) + 0.001))"
}